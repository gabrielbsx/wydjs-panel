<script>
    //Author: Kentaro
    var pages = [
        'home', 'donate', 'donate-rules', 'ranking-players', 'ranking-cities', 'guildmark', 'change-password', 'recovery-numeric-password',
    ];

    var translate = {
        'id': 'Identificador',
        'name': 'Nome',
        'player': 'Jogador',
        'percent': 'Porcentagem',
        'donate': 'Donate',
        'value': 'Valor',
        'createdAt': 'Criado em',
        'updatedAt': 'Atualizado em',
    };

    var removeHomeClass = !(location.hash === '#home' || location.hash === '');
    
    if (!location.hash.length) {
        $('a[href*="#home"]').parent().addClass('active');
        $('.home').show('slow');
        var currentElement = $('li.active').children('a');
    } else {
        var elem = $(`a[href*="${location.hash}"]:first`);
        elem = elem.parent().parent().parent().parent().is('li') ? elem.parent().parent().parent().parent() : elem.parent();
        elem.addClass('active');
        $(location.hash.replace('#', '.')).show('slow');
        var currentElement = elem;
    }

    async function updateApi(url, id) {
        console.log(id);
        $('.update-title').text(url.replaceAll('-', ' ').replace('/', ''));
        $('.update').toggle();
    }
    
    async function deleteApi(url, id) {
        console.log(id);
    }

    async function addGuildname(guildname, guildid) {
        
    }
    
    async function getGuildname(id) {
        
    }
    
    async function verifyGuild() {
        $.get("/guildinfo", (data) => {
            console.log(data);
        });
    }
    
    async function setpage(page, element) {
        var button = $(element).parent().parent().parent().parent();
        button = button.is('li') ? button : $(element).parent();

        if (currentElement) {
            $(currentElement).removeClass('active');
            var oldButton = $(currentElement).parent().parent().parent().parent();
            oldButton = oldButton.is('li') ? oldButton : $(currentElement).parent();
            oldButton.removeClass('active');
            button.addClass('active');
        }

        if ($(`.${page}:visible`).length) {
            $(`.${page}`).hide('slow');
        } else {
            pages.forEach(async (value) => {
                if (value === page) {
                    $(`.${value}`).show('slow');
                    $(element).addClass('active');
                    currentElement = element;
                    return;
                }
                $(`.${value}`).hide('slow');
            });
        }
    }
    
    $(document).ready(async () => {
        if (removeHomeClass)  $('a[href*="#home"]').parent().removeClass('active');
        
        $("form").submit(function (event) {
            event.preventDefault();
            var data = new FormData(this);
            var url = $(this).attr('action');
            var type = $(this).attr('method');
            
            $.ajax({
                url: url,
                type: type,
                contentType: false,
                processData: false,
                data: data,
                success: async (message) => {
                    await setrecaptcha();
                    $(".message-ajax").append(`
                        <div class="alert alert-${message.status === 'success' ? message.status : 'danger'}">
                            ${message.message}
                        </div>
                    `);
                    $(".message-ajax").show('slow');
                    setTimeout(async () => {
                        $(".message-ajax").hide('slow');
                    }, 3000);
                    setTimeout(async () => {
                        $(".message-ajax").empty();
                    }, 3300);
                },
                error: async (err) => {
                    await setrecaptcha();
                    $(".message-ajax").append(`
                        <div class="alert alert-danger">
                            ${err.responseJSON.message || err.statusText}
                        </div>
                    `);
                    $(".message-ajax").show('slow');
                    setTimeout(async () => {
                        $(".message-ajax").hide('slow');
                    }, 3000);
                    setTimeout(async () => {
                        $(".message-ajax").empty();
                    }, 3300);
                },
            });
        });

        async function getApi(url, classAppend) {
            $.ajax({
                url: url,
                success: async (data) => {
                    var appendData = '<div class="row"><table class="table table-dark table-hover table-striped">';
                    data.data.forEach(async (value, key) => {
                        var id = value.id;
                        delete value.id;
                        delete value.createdAt;
                        delete value.updatedAt;
                        if (typeof keys === 'undefined') {
                            var keys = Object.keys(value);
                            appendData += '<thead>';
                            keys.forEach(async (name) => {
                                appendData += `<th>${translate[name]}</th>`;
                            });
                            appendData += `<th colspan="2">Ação</th>`;
                            appendData += '</thead>';
                            appendData += '<tbody>';
                        }

                        keys.forEach(async (name) => {
                            appendData += `<td>${value[name]}</td>`;
                        });

                        appendData += `
                            <td>
                                <button class="btn btn-primary" onclick="updateApi('${url}', '${id}');">Alterar</button>
                            </td>
                            <td>
                                <button class="btn btn-danger" onclick="deleteApi('${url}', '${id}');">Deletar</button>
                            </td>
                        `;
                        appendData += '</tbody>';
                    });

                    appendData += '</table></div>';
                    
                    $(classAppend).append(appendData);
                },
                error: async (err) => {
                    $(classAppend).append('<div class="alert alert-danger">Houve algum problema na API!</div>');
                },
            });
        }

        <% if (user.access === 3) { %>

            translate.haha = 'teste';
            console.log(translate);

            pages.push('donate-packages');
            pages.push('donate-items');

            await getApi('/donate-packages', '.list-donate-packages');

        <% } %>
    });
</script>